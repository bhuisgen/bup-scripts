#!/bin/bash

BACKUP_NAME=$HOSTNAME            # backup name
BACKUP_DIRS=/etc:/root:/home     #Â directories list to backup
BACKUP_REMOTE=0                  # remote backup
BACKUP_HOST=192.168.0.254        # remote server

#
# script
#

NAME=backup-$BACKUP_NAME
LOCK_FILE=/tmp/$NAME.lock
ERROR_FILE=/tmp/$NAME.err

function error {
    logger -t "$NAME[$$]" -s -p user.error -- $1

    touch $ERROR_FILE
    rm -f $LOCK_FILE

    exit 1
}

function log {
    logger -t "$NAME[$$]" -s -p user.notice -- $1
}

trap 'touch $ERROR_FILE' SIGHUP SIGINT SIGTERM

if [ -r $(dirname $0)/config ]; then
    error "config file not found/not readable"
    
    exit 1
fi

. $(dirname $0)/config

[ -z $BACKUP_NAME ] && error "BACKUP_NAME not set"
[ -z $BACKUP_DIRS ] && error "BACKUP_DIRS not set"
[ -z $BACKUP_REMOTE ] && error "BACKUP_REMOTE not set"
[ "$BACKUP_REMOTE" == 1 ] && [ -z $BACKUP_HOST ] && error "BACKUP_HOST not set"

[ ! -f $LOCK_FILE ] || error "script already running"
touch $LOCK_FILE
rm -f $ERROR_FILE

[ $(which bup) ] || error "bup not found"

[ ! -d BUP_PATH ] && bup init

REMOTE=""
if [ "$BACKUP_REMOTE" == 1 ]; then
    REMOTE="on $BACKUP_HOST"
fi

DIRS=${BACKUP_DIRS//:/ }

log "indexing files"

for DIR in $DIRS
do
    bup index -ux $REMOTE $DIR || error "index error"
done

log "saving files"

for DIR in $DIRS
do
    SUFFIX=${DIR:1}
    SUFFIX=${SUFFIX//\//_}

    bup $REMOTE save -n $BACKUP_NAME-$SUFFIX $DIR || error "save error"
done

log "Backup done"

rm -f $LOCK_FILE

# end
